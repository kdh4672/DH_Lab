{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 코로나 확진자 Data를 이용한 빅데이터 프로젝트\n",
    "\n",
    "#### 순서: 코로나 맵, 날짜에 따른 나라별 확진자 비교 그래프, 나이 분포(정규분포), 성별(원그래프), \n",
    "\n",
    "###### 설치해야하는 라이브러리 : folium, IPython,ffmpeg,celluloid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import time\n",
    "start = time.time()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1.Patient class 생성\n",
    "input  = [ id , reporting_date , summary , location , country , gender , age , visit_wuhan , \n",
    "from_wuhan , death , recovered ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Patient(object):\n",
    "    def __init__(self,list):\n",
    "        self.id= list[0]\n",
    "        self.reporting_date = list[1]\n",
    "        self.summary = list[2]\n",
    "        self.location = list[3]\n",
    "        self.country = list[4]\n",
    "        self.gender = list[5]\n",
    "        self.age = list[6]\n",
    "        self.visit_wuhan = list[7]\n",
    "        self.from_wuhan = list[8]\n",
    "        self.death = list[9]\n",
    "        self.recovered = list[10]\n",
    "        self.list = list[0:11]\n",
    "patient_list = []"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. 데이터 오류 수정\n",
    "\n",
    "날짜 데이터 중간중간에 연도 뒷자리 두 숫자와 월 일의 순서가 뒤죽박죽 섞여있고, 다른 데이터와 달리 '/' 대신 '-'으로 split이 되어있는 오류를 확인 -> 수정"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from IPython.display import Image\n",
    "Image(\"Date_Data_Error.PNG\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'1\\t1/20/2020\\t\"First confirmed imported COVID-19 pneumonia patient in Shenzhen (from Wuhan): male, 66, shenzheng residence, visited relatives in Wuhan on 12/29/2019, symptoms onset on 01/03/2020, returned to Shenzhen and seek medical care on 01/04/2020, hospitalized on 01/11/2020, sample sent to China CDC for testing on 01/18/2020, confirmed on 01/19/2020. 8 others under medical observation, contact tracing ongoing.\"\\t\"Shenzhen, Guangdong\"\\tChina\\tmale\\t66\\t1\\t0\\t0\\t0\\n'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fp = open(\"corona_data.txt\",\"rt\")\n",
    "a = fp.readlines()\n",
    "a[1] ##readlines 한 것 예시,정보가 \\t로 나눠져 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2/04/2020'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "p = re.compile(r\"(20)0(\\d)\\W(\\d{2})\\W(\\d{2})\") #수정할 패턴 compile\n",
    "s = '2002-04-20'\n",
    "m = p.sub('\\g<2>/\\g<3>/\\g<1>\\g<4>',s) \n",
    "m  ##ex) 2002-04-20 -> 2/04/2020"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "오류가 있는 날짜 데이터 수정\n",
      "\n",
      "count: 1  date:  2002-08-20 -> 2/08/2020\n",
      "count: 2  date:  2002-08-20 -> 2/08/2020\n",
      "count: 3  date:  2002-08-20 -> 2/08/2020\n",
      "count: 4  date:  2002-08-20 -> 2/08/2020\n",
      "count: 5  date:  2002-08-20 -> 2/08/2020\n",
      "count: 6  date:  2002-01-20 -> 2/01/2020\n",
      "count: 7  date:  2002-01-20 -> 2/01/2020\n",
      "count: 8  date:  2002-01-20 -> 2/01/2020\n",
      "count: 9  date:  2002-04-20 -> 2/04/2020\n",
      "count: 10  date:  2002-04-20 -> 2/04/2020\n",
      "count: 11  date:  2002-04-20 -> 2/04/2020\n",
      "count: 12  date:  2002-05-20 -> 2/05/2020\n",
      "count: 13  date:  2002-05-20 -> 2/05/2020\n",
      "count: 14  date:  2002-05-20 -> 2/05/2020\n",
      "count: 15  date:  2002-08-20 -> 2/08/2020\n",
      "count: 16  date:  2002-10-20 -> 2/10/2020\n",
      "count: 17  date:  2002-10-20 -> 2/10/2020\n",
      " \n",
      "262 번째:  date:  NA -> remove patient from list \n",
      " \n",
      "count: 18  date:  2002-04-20 -> 2/04/2020\n",
      "count: 19  date:  2002-04-20 -> 2/04/2020\n",
      "count: 20  date:  2002-05-20 -> 2/05/2020\n",
      "count: 21  date:  2002-05-20 -> 2/05/2020\n",
      "count: 22  date:  2002-06-20 -> 2/06/2020\n",
      "count: 23  date:  2002-06-20 -> 2/06/2020\n",
      "count: 24  date:  2002-07-20 -> 2/07/2020\n",
      "count: 25  date:  2002-08-20 -> 2/08/2020\n",
      "count: 26  date:  2002-09-20 -> 2/09/2020\n",
      "count: 27  date:  2002-10-20 -> 2/10/2020\n",
      "count: 28  date:  2002-01-20 -> 2/01/2020\n",
      "count: 29  date:  2002-01-20 -> 2/01/2020\n",
      "count: 30  date:  2002-04-20 -> 2/04/2020\n",
      "count: 31  date:  2002-04-20 -> 2/04/2020\n",
      "count: 32  date:  2002-04-20 -> 2/04/2020\n",
      "count: 33  date:  2002-04-20 -> 2/04/2020\n",
      "count: 34  date:  2002-04-20 -> 2/04/2020\n",
      "count: 35  date:  2002-04-20 -> 2/04/2020\n",
      "count: 36  date:  2002-05-20 -> 2/05/2020\n",
      "count: 37  date:  2002-05-20 -> 2/05/2020\n",
      "count: 38  date:  2002-05-20 -> 2/05/2020\n",
      "count: 39  date:  2002-05-20 -> 2/05/2020\n",
      "count: 40  date:  2002-06-20 -> 2/06/2020\n",
      "count: 41  date:  2002-06-20 -> 2/06/2020\n",
      "count: 42  date:  2002-07-20 -> 2/07/2020\n",
      "count: 43  date:  2002-07-20 -> 2/07/2020\n",
      "count: 44  date:  2002-07-20 -> 2/07/2020\n",
      "count: 45  date:  2002-08-20 -> 2/08/2020\n",
      "count: 46  date:  2002-08-20 -> 2/08/2020\n",
      "count: 47  date:  2002-08-20 -> 2/08/2020\n",
      "count: 48  date:  2002-08-20 -> 2/08/2020\n",
      "count: 49  date:  2002-08-20 -> 2/08/2020\n",
      "count: 50  date:  2002-08-20 -> 2/08/2020\n",
      "count: 51  date:  2002-08-20 -> 2/08/2020\n",
      "count: 52  date:  2002-09-20 -> 2/09/2020\n",
      "count: 53  date:  2002-09-20 -> 2/09/2020\n",
      "count: 54  date:  2002-09-20 -> 2/09/2020\n",
      "count: 55  date:  2002-10-20 -> 2/10/2020\n",
      "count: 56  date:  2002-10-20 -> 2/10/2020\n",
      "count: 57  date:  2002-11-20 -> 2/11/2020\n",
      "count: 58  date:  2002-11-20 -> 2/11/2020\n",
      "count: 59  date:  2002-12-20 -> 2/12/2020\n",
      "count: 60  date:  2002-12-20 -> 2/12/2020\n",
      "count: 61  date:  2002-12-20 -> 2/12/2020\n",
      "count: 62  date:  2002-01-20 -> 2/01/2020\n",
      "count: 63  date:  2002-02-20 -> 2/02/2020\n",
      "count: 64  date:  2002-02-20 -> 2/02/2020\n",
      "count: 65  date:  2002-02-20 -> 2/02/2020\n",
      "count: 66  date:  2002-04-20 -> 2/04/2020\n",
      "count: 67  date:  2002-05-20 -> 2/05/2020\n",
      "count: 68  date:  2002-05-20 -> 2/05/2020\n",
      "count: 69  date:  2002-05-20 -> 2/05/2020\n",
      "count: 70  date:  2002-06-20 -> 2/06/2020\n",
      "count: 71  date:  2002-06-20 -> 2/06/2020\n",
      "count: 72  date:  2002-06-20 -> 2/06/2020\n",
      "count: 73  date:  2002-06-20 -> 2/06/2020\n",
      "count: 74  date:  2002-07-20 -> 2/07/2020\n",
      "count: 75  date:  2002-09-20 -> 2/09/2020\n",
      "count: 76  date:  2002-09-20 -> 2/09/2020\n",
      "count: 77  date:  2002-09-20 -> 2/09/2020\n",
      "count: 78  date:  2002-11-20 -> 2/11/2020\n",
      "count: 79  date:  2002-05-20 -> 2/05/2020\n",
      "count: 80  date:  2002-06-20 -> 2/06/2020\n",
      "count: 81  date:  2002-06-20 -> 2/06/2020\n",
      "count: 82  date:  2002-06-20 -> 2/06/2020\n",
      "count: 83  date:  2002-06-20 -> 2/06/2020\n",
      "count: 84  date:  2002-06-20 -> 2/06/2020\n",
      "count: 85  date:  2002-08-20 -> 2/08/2020\n",
      "count: 86  date:  2002-08-20 -> 2/08/2020\n",
      "count: 87  date:  2002-04-20 -> 2/04/2020\n",
      "count: 88  date:  2002-04-20 -> 2/04/2020\n",
      "count: 89  date:  2002-04-20 -> 2/04/2020\n",
      "count: 90  date:  2002-04-20 -> 2/04/2020\n",
      "count: 91  date:  2002-04-20 -> 2/04/2020\n",
      "count: 92  date:  2002-08-20 -> 2/08/2020\n",
      "count: 93  date:  2002-08-20 -> 2/08/2020\n",
      "count: 94  date:  2002-08-20 -> 2/08/2020\n",
      "count: 95  date:  2002-08-20 -> 2/08/2020\n",
      "count: 96  date:  2002-08-20 -> 2/08/2020\n",
      "count: 97  date:  2002-08-20 -> 2/08/2020\n",
      "count: 98  date:  2002-08-20 -> 2/08/2020\n",
      "count: 99  date:  2002-11-20 -> 2/11/2020\n",
      "count: 100  date:  2002-03-20 -> 2/03/2020\n",
      "count: 101  date:  2002-03-20 -> 2/03/2020\n",
      "count: 102  date:  2002-03-20 -> 2/03/2020\n",
      "count: 103  date:  2002-05-20 -> 2/05/2020\n",
      "count: 104  date:  2002-10-20 -> 2/10/2020\n",
      "count: 105  date:  2002-12-20 -> 2/12/2020\n",
      "count: 106  date:  2002-03-20 -> 2/03/2020\n",
      "count: 107  date:  2002-03-20 -> 2/03/2020\n",
      "count: 108  date:  2002-03-20 -> 2/03/2020\n",
      "count: 109  date:  2002-04-20 -> 2/04/2020\n",
      "count: 110  date:  2002-04-20 -> 2/04/2020\n",
      "count: 111  date:  2002-06-20 -> 2/06/2020\n",
      "count: 112  date:  2002-06-20 -> 2/06/2020\n",
      "count: 113  date:  2002-08-20 -> 2/08/2020\n",
      "count: 114  date:  2002-09-20 -> 2/09/2020\n",
      "count: 115  date:  2002-10-20 -> 2/10/2020\n",
      "count: 116  date:  2002-01-20 -> 2/01/2020\n",
      "count: 117  date:  2002-01-20 -> 2/01/2020\n",
      "count: 118  date:  2002-01-20 -> 2/01/2020\n",
      "count: 119  date:  2002-04-20 -> 2/04/2020\n",
      "count: 120  date:  2002-05-20 -> 2/05/2020\n",
      "count: 121  date:  2002-06-20 -> 2/06/2020\n",
      "count: 122  date:  2002-01-20 -> 2/01/2020\n",
      "count: 123  date:  2002-05-20 -> 2/05/2020\n",
      "count: 124  date:  2002-06-20 -> 2/06/2020\n",
      "count: 125  date:  2002-06-20 -> 2/06/2020\n",
      "count: 126  date:  2002-01-20 -> 2/01/2020\n",
      "count: 127  date:  2002-02-20 -> 2/02/2020\n",
      "count: 128  date:  2002-02-20 -> 2/02/2020\n",
      "count: 129  date:  2002-05-20 -> 2/05/2020\n",
      "count: 130  date:  2002-05-20 -> 2/05/2020\n",
      "count: 131  date:  2002-06-20 -> 2/06/2020\n",
      "count: 132  date:  2002-07-20 -> 2/07/2020\n",
      "count: 133  date:  2002-11-20 -> 2/11/2020\n",
      "count: 134  date:  2002-11-20 -> 2/11/2020\n",
      "count: 135  date:  2002-01-20 -> 2/01/2020\n",
      "count: 136  date:  2002-08-20 -> 2/08/2020\n",
      "count: 137  date:  2002-08-20 -> 2/08/2020\n",
      "count: 138  date:  2002-10-20 -> 2/10/2020\n",
      "count: 139  date:  2002-02-20 -> 2/02/2020\n",
      "count: 140  date:  2002-02-20 -> 2/02/2020\n",
      "count: 141  date:  2002-04-20 -> 2/04/2020\n",
      "count: 142  date:  2002-04-20 -> 2/04/2020\n",
      "count: 143  date:  2002-04-20 -> 2/04/2020\n",
      "count: 144  date:  2002-05-20 -> 2/05/2020\n",
      "count: 145  date:  2002-05-20 -> 2/05/2020\n",
      "count: 146  date:  2002-05-20 -> 2/05/2020\n",
      "count: 147  date:  2002-06-20 -> 2/06/2020\n",
      "count: 148  date:  2002-06-20 -> 2/06/2020\n",
      "count: 149  date:  2002-06-20 -> 2/06/2020\n",
      "count: 150  date:  2002-07-20 -> 2/07/2020\n",
      "count: 151  date:  2002-07-20 -> 2/07/2020\n",
      "count: 152  date:  2002-09-20 -> 2/09/2020\n",
      "count: 153  date:  2002-09-20 -> 2/09/2020\n",
      "count: 154  date:  2002-09-20 -> 2/09/2020\n",
      "count: 155  date:  2002-09-20 -> 2/09/2020\n",
      "count: 156  date:  2002-09-20 -> 2/09/2020\n",
      "count: 157  date:  2002-09-20 -> 2/09/2020\n",
      "count: 158  date:  2002-09-20 -> 2/09/2020\n",
      "count: 159  date:  2002-09-20 -> 2/09/2020\n",
      "count: 160  date:  2002-09-20 -> 2/09/2020\n",
      "count: 161  date:  2002-09-20 -> 2/09/2020\n",
      "count: 162  date:  2002-10-20 -> 2/10/2020\n",
      "count: 163  date:  2002-10-20 -> 2/10/2020\n",
      "count: 164  date:  2002-10-20 -> 2/10/2020\n",
      "count: 165  date:  2002-10-20 -> 2/10/2020\n",
      "count: 166  date:  2002-10-20 -> 2/10/2020\n",
      "count: 167  date:  2002-10-20 -> 2/10/2020\n",
      "count: 168  date:  2002-11-20 -> 2/11/2020\n",
      "count: 169  date:  2002-11-20 -> 2/11/2020\n",
      "count: 170  date:  2002-11-20 -> 2/11/2020\n",
      "count: 171  date:  2002-11-20 -> 2/11/2020\n",
      "count: 172  date:  2002-11-20 -> 2/11/2020\n",
      "count: 173  date:  2002-11-20 -> 2/11/2020\n",
      "count: 174  date:  2002-11-20 -> 2/11/2020\n",
      "count: 175  date:  2002-12-20 -> 2/12/2020\n",
      "count: 176  date:  2002-06-20 -> 2/06/2020\n",
      "count: 177  date:  2002-06-20 -> 2/06/2020\n",
      "count: 178  date:  2002-09-20 -> 2/09/2020\n",
      "count: 179  date:  2002-10-20 -> 2/10/2020\n",
      "count: 180  date:  2002-10-20 -> 2/10/2020\n",
      "count: 181  date:  2002-10-20 -> 2/10/2020\n",
      "count: 182  date:  2002-10-20 -> 2/10/2020\n",
      "count: 183  date:  2002-12-20 -> 2/12/2020\n",
      "count: 184  date:  2002-02-20 -> 2/02/2020\n",
      "count: 185  date:  2002-03-20 -> 2/03/2020\n",
      "count: 186  date:  2002-02-20 -> 2/02/2020\n",
      "count: 187  date:  2002-02-20 -> 2/02/2020\n",
      "count: 188  date:  2002-05-20 -> 2/05/2020\n",
      "count: 189  date:  2002-10-20 -> 2/10/2020\n",
      "count: 190  date:  2002-04-20 -> 2/04/2020\n"
     ]
    }
   ],
   "source": [
    "count = 0\n",
    "print(\"오류가 있는 날짜 데이터 수정\\n\")\n",
    "for i in range(1,len(a)):\n",
    "    person_info = a[i]\n",
    "    info_list = person_info.split('\\t') ## \\t 가 나올때마다, split해서 list로 나눔\n",
    "    patient_class = Patient(info_list) ## list를 input하여 1085명 patient class 생성\n",
    "    if '2002' in patient_class.reporting_date:\n",
    "        s = patient_class.reporting_date\n",
    "        count = count+1\n",
    "        m = p.sub('\\g<2>/\\g<3>/\\g<1>\\g<4>',patient_class.reporting_date)\n",
    "        patient_class.reporting_date = m\n",
    "        patient_class.list[1] = m\n",
    "        print(\"count:\",count,\" date: \",s,\"->\",patient_class.reporting_date)\n",
    "    elif patient_class.reporting_date == 'NA':\n",
    "        print(\" \")\n",
    "        print(i,\"번째: \", \"date: \",'NA',\"->\",'remove patient from list ')\n",
    "        print(\" \")\n",
    "        error_num = i\n",
    "    patient_list.append(patient_class)\n",
    "del patient_list[error_num-1]\n",
    "for i in range(error_num-1,len(patient_list)):\n",
    "    patient_list[i].id = str(int(patient_list[i].id) -1)\n",
    "    patient_list[i].list[0] = patient_list[i].id"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Corona Map (2020.1.13~2020.2.27)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'China': 197,\n",
       " 'France': 39,\n",
       " 'Japan': 189,\n",
       " 'Malaysia': 23,\n",
       " 'Nepal': 1,\n",
       " 'Singapore': 93,\n",
       " 'South Korea': 114,\n",
       " 'Taiwan': 34,\n",
       " 'Thailand': 41,\n",
       " 'USA': 18,\n",
       " 'Vietnam': 16,\n",
       " 'Australia': 15,\n",
       " 'Canada': 12,\n",
       " 'Cambodia': 1,\n",
       " 'Sri Lanka': 1,\n",
       " 'Germany': 54,\n",
       " 'UAE': 21,\n",
       " 'Hong Kong': 94,\n",
       " 'Italy': 3,\n",
       " 'Russia': 2,\n",
       " 'UK': 20,\n",
       " 'India': 3,\n",
       " 'Phillipines': 3,\n",
       " 'Finland': 1,\n",
       " 'Spain': 34,\n",
       " 'Sweden': 1,\n",
       " 'Belgium': 1,\n",
       " 'Egypt': 1,\n",
       " 'Iran': 18,\n",
       " 'Israel': 1,\n",
       " 'Lebanon': 1,\n",
       " 'Kuwait': 9,\n",
       " 'Bahrain': 17,\n",
       " 'Austria': 2,\n",
       " 'Afghanistan': 1,\n",
       " 'Algeria': 1,\n",
       " 'Croatia': 1,\n",
       " 'Switzerland': 1}"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "country_list = []\n",
    "\n",
    "for i in range(0,len(patient_list)):\n",
    "    country_list.append(patient_list[i].country) ## patient_list의 country 변수만 추출하여 country_list 생성\n",
    "\n",
    "sorted_country_list = sorted(list(set(country_list))) ## country list 중복 제거, 이름순 정리\n",
    "\n",
    "country_count= {}\n",
    "for lst in country_list:      ## country 마다 patient count\n",
    "    try: country_count[lst]+= 1\n",
    "    except: country_count[lst]=1    \n",
    "\n",
    "\n",
    "country_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "38"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coordinate_list = [(33.9,67.7),(28,1.6),(-25.3,133.7),(48.2,16.4),(26.0,50.5),\\\n",
    "                  (50.5,4.4),(12.5,104.9),(56.1,-106.3),(35.86,104.19),(45.09,15.2),\\\n",
    "                  (26.82,30.8),(61.9,25.7),(46.22,2.21),(51.165,10.45),(22.39,114.10),\\\n",
    "                  (20.593,78.96),(32.427,53.68),(31.04,34.851),(41.871,12.567),(36.20,138.252),\\\n",
    "                   (29.31,47.481),(33.85,35.86),(4.210,101.97),(28.39,84.12),(12.87,121.77),\\\n",
    "                   (61.52,105.318),(1.352,103.81),(35.907,127.766),(40.463,-3.74),(7.873,80.771),\\\n",
    "                   (60.128,18.643),(46.818,8.22),(23.69,120.96),(15.87,100.992),(23.424,53.84),\\\n",
    "                   (55.378,-3.43),(37.09,-95.7),(14.058,108.27)]\n",
    "len(coordinate_list) ## 나라별 좌표 list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_count_list = []\n",
    "for country in sorted_country_list:\n",
    "    country_count_list.append((country,country_count[country])) ## country count의 자료형 dictionary -> list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x2027b5bdf88>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import folium\n",
    "from folium.features import DivIcon\n",
    "\n",
    "m = folium.Map(coordinate_list[21], zoom_start=2) ## 지도 중심위치: 레바논\n",
    "\n",
    "for i in range(len(sorted_country_list)):\n",
    "    population = country_count_list[i][1]  ## 나라별 인구 변수\n",
    "    coordinate = coordinate_list[i]  ## 나라별 좌표 변수\n",
    "    \n",
    "    folium.Circle(location = coordinate, color = 'red',\n",
    "                  radius = 10000*population,fill=True).add_to(m) ## 인구에 비례하게 원 mark\n",
    "    folium.map.Marker(\n",
    "    [coordinate[0], coordinate[1]],\n",
    "    icon=DivIcon(\n",
    "        icon_anchor=(0,0),\n",
    "        html='<div style=\"font-size: 10pt\">%s:%d</div>' %(sorted_country_list[i],(population)), ## text 삽입\n",
    "        )\n",
    "    ).add_to(m)\n",
    "m"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 특징: 중국에서 발병했으므로 근처에 있는 아시아 국가의 발병률이 높음, 특이한 것은\n",
    "## 멀리 떨어져 있는 유럽국가에서 발병률이 그 중간지역에 있는 발병률보다 높음."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4. Pandas로 Dataframe 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1084\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>reporting_date</th>\n",
       "      <th>summary</th>\n",
       "      <th>location</th>\n",
       "      <th>country</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>visit_wuhan</th>\n",
       "      <th>from_wuhan</th>\n",
       "      <th>death</th>\n",
       "      <th>recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1/20/2020</td>\n",
       "      <td>\"First confirmed imported COVID-19 pneumonia p...</td>\n",
       "      <td>\"Shenzhen, Guangdong\"</td>\n",
       "      <td>China</td>\n",
       "      <td>male</td>\n",
       "      <td>66</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1/20/2020</td>\n",
       "      <td>\"First confirmed imported COVID-19 pneumonia p...</td>\n",
       "      <td>Shanghai</td>\n",
       "      <td>China</td>\n",
       "      <td>female</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1/21/2020</td>\n",
       "      <td>\"First confirmed imported cases in Zhejiang: p...</td>\n",
       "      <td>Zhejiang</td>\n",
       "      <td>China</td>\n",
       "      <td>male</td>\n",
       "      <td>46</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1/21/2020</td>\n",
       "      <td>\"new confirmed imported COVID-19 pneumonia in ...</td>\n",
       "      <td>Tianjin</td>\n",
       "      <td>China</td>\n",
       "      <td>female</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1/21/2020</td>\n",
       "      <td>\"new confirmed imported COVID-19 pneumonia in ...</td>\n",
       "      <td>Tianjin</td>\n",
       "      <td>China</td>\n",
       "      <td>male</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1079</th>\n",
       "      <td>1080</td>\n",
       "      <td>2/25/2020</td>\n",
       "      <td>\"new COVID-19 patient confirmed in Austria: 24...</td>\n",
       "      <td>Innsbruck</td>\n",
       "      <td>Austria</td>\n",
       "      <td>NA</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1080</th>\n",
       "      <td>1081</td>\n",
       "      <td>2/24/2020</td>\n",
       "      <td>\"new COVID-19 patient confirmed in Afghanistan...</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NA</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1081</th>\n",
       "      <td>1082</td>\n",
       "      <td>2/26/2020</td>\n",
       "      <td>\"new COVID-19 patient confirmed in Algeria: ma...</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>male</td>\n",
       "      <td>NA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1082</th>\n",
       "      <td>1083</td>\n",
       "      <td>2/25/2020</td>\n",
       "      <td>\"new COVID-19 patient confirmed in Croatia: ma...</td>\n",
       "      <td>Croatia</td>\n",
       "      <td>Croatia</td>\n",
       "      <td>male</td>\n",
       "      <td>NA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1083</th>\n",
       "      <td>1084</td>\n",
       "      <td>2/25/2020</td>\n",
       "      <td>\"new COVID-19 patient confirmed in Switzerland...</td>\n",
       "      <td>Bern</td>\n",
       "      <td>Switzerland</td>\n",
       "      <td>male</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0\\n</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1084 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id reporting_date                                            summary  \\\n",
       "0        1      1/20/2020  \"First confirmed imported COVID-19 pneumonia p...   \n",
       "1        2      1/20/2020  \"First confirmed imported COVID-19 pneumonia p...   \n",
       "2        3      1/21/2020  \"First confirmed imported cases in Zhejiang: p...   \n",
       "3        4      1/21/2020  \"new confirmed imported COVID-19 pneumonia in ...   \n",
       "4        5      1/21/2020  \"new confirmed imported COVID-19 pneumonia in ...   \n",
       "...    ...            ...                                                ...   \n",
       "1079  1080      2/25/2020  \"new COVID-19 patient confirmed in Austria: 24...   \n",
       "1080  1081      2/24/2020  \"new COVID-19 patient confirmed in Afghanistan...   \n",
       "1081  1082      2/26/2020  \"new COVID-19 patient confirmed in Algeria: ma...   \n",
       "1082  1083      2/25/2020  \"new COVID-19 patient confirmed in Croatia: ma...   \n",
       "1083  1084      2/25/2020  \"new COVID-19 patient confirmed in Switzerland...   \n",
       "\n",
       "                   location      country  gender age visit_wuhan from_wuhan  \\\n",
       "0     \"Shenzhen, Guangdong\"        China    male  66           1          0   \n",
       "1                  Shanghai        China  female  56           0          1   \n",
       "2                  Zhejiang        China    male  46           0          1   \n",
       "3                   Tianjin        China  female  60           1          0   \n",
       "4                   Tianjin        China    male  58           0          0   \n",
       "...                     ...          ...     ...  ..         ...        ...   \n",
       "1079              Innsbruck      Austria      NA  24           0          0   \n",
       "1080            Afghanistan  Afghanistan      NA  35           0          0   \n",
       "1081                Algeria      Algeria    male  NA           0          0   \n",
       "1082                Croatia      Croatia    male  NA           0          0   \n",
       "1083                   Bern  Switzerland    male  70           0          0   \n",
       "\n",
       "     death recovered  \n",
       "0        0       0\\n  \n",
       "1        0       0\\n  \n",
       "2        0       0\\n  \n",
       "3        0       0\\n  \n",
       "4        0       0\\n  \n",
       "...    ...       ...  \n",
       "1079     0       0\\n  \n",
       "1080     0       0\\n  \n",
       "1081     0       0\\n  \n",
       "1082     0       0\\n  \n",
       "1083     0       0\\n  \n",
       "\n",
       "[1084 rows x 11 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = []\n",
    "columns=['id','reporting_date','summary','location','country',\n",
    "                               'gender','age','visit_wuhan','from_wuhan','death','recovered']\n",
    "for i in range(len(patient_list)):\n",
    "    data.append(patient_list[i].list)\n",
    "a = pd.DataFrame(data,columns=columns)\n",
    "print(patient_list[-1].id)\n",
    "a"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5.Days vs Patient Number Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Accumulative Patient Number')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "from dateutil.relativedelta import *\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "plt.rc('font', size = 10)\n",
    "date_count= {}\n",
    "for lst in sorted(a[\"reporting_date\"]):      ## country 마다 patient count\n",
    "    try: date_count[lst]+= 1\n",
    "    except: date_count[lst]=1    \n",
    "\n",
    "date = [key for key in date_count]\n",
    "num = [date_count[key] for key in date_count]\n",
    "\n",
    "start_date = date[0].split('/')\n",
    "start_date = datetime(int(start_date[2]),int(start_date[0]),int(start_date[1]))\n",
    "\n",
    "dateC = []\n",
    "for i in range(len(date)):\n",
    "    end_date = date[i].split('/')\n",
    "    end_date = datetime(int(end_date[2]),int(end_date[0]),int(end_date[1]))\n",
    "    date_gap = end_date - start_date \n",
    "    dateC.append(date_gap.days)\n",
    "    \n",
    "numC = []\n",
    "for i in range(len(num)):\n",
    "    numC.append(sum(num[0:i+1]))\n",
    "\n",
    "DvP = pd.Series(numC,index = dateC)\n",
    "plt.plot(DvP)\n",
    "\n",
    "plt.title('Days vs Patient number')\n",
    "plt.xlabel('Days')\n",
    "plt.ylabel('Accumulative Patient Number')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6.Age vs Patient Number Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "age_count = {}\n",
    "for lst in (a[\"age\"]):## country 마다 patient count\n",
    "    if lst == 'NA':\n",
    "        continue\n",
    "    elif float(lst) < 1:\n",
    "        continue\n",
    "    try: age_count[int(lst)]+= 1\n",
    "    except: age_count[int(lst)]=1    ## dictionary 자료형인 {나이 : 몇명,나이 : 몇명,나이 : 몇명} 형태로 저장됨.\n",
    "\n",
    "age = [key for key in age_count]\n",
    "num = []\n",
    "age = sorted(age)\n",
    "for key in age:\n",
    "    num.append(age_count[key])\n",
    "plt.rc('font', size = 10)\n",
    "DvP = pd.Series(num,index = age)\n",
    "plt.bar(age,num,width = 1)\n",
    "plt.title('Age vs Patient number')\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Patient Number')\n",
    "plt.xticks([10,20,30,40,50,60,70,80,90,100])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 특징 1 : 50~60대에서 가장 많이 발생함\n",
    "### 특징 2 : N십대 '중반'에서 많이 발생함 ex) 25,35,45,55,65,75,85"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 7. 성별에 따른 코로나 바이러스 환자 비율 pie 그래프"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "countF = 0\n",
    "countM = 0\n",
    "\n",
    "for i in range(len(patient_list)):          ## patient_list안의 1084명의 성별을 누적해서 성별당 총 사람 수 계산\n",
    "    if patient_list[i].gender == 'male':\n",
    "        countM += 1\n",
    "    elif patient_list[i].gender == 'female':\n",
    "        countF += 1\n",
    "\n",
    "data = [countM,countF]\n",
    "label = ['Male','Female']\n",
    "plt.pie(data,labels=label,colors = ['lightskyblue',  'lightcoral'],counterclock=False,explode = (0, 0)\n",
    "       , startangle=-80, autopct='%1.1f%%', shadow=True)\n",
    "plt.show()\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 특징 : 남자가 걸릴 확률이 15.2% 더 높다는 것을 확인할 수 있다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 8. 시간의 흐름에 따른 국가별 코로나 환자수 증가 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "date_list = {}\n",
    "id = 1\n",
    "for lst in a[\"reporting_date\"]:\n",
    "    try: \n",
    "        date_list[lst].append(a[\"id\"][id-1])\n",
    "        \n",
    "    except: \n",
    "        date_list[lst] = a[\"id\"][id-1]\n",
    "        date_list[lst] = [date_list[lst]]\n",
    "    id = id +1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\kdh46\\anaconda3\\lib\\site-packages\\ipykernel_launcher.py:47: MatplotlibDeprecationWarning: \n",
      "The frameon kwarg was deprecated in Matplotlib 3.1 and will be removed in 3.3. Use facecolor instead.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<video src=\"corona_20200113~20200227.mp4\" controls  >\n",
       "      Your browser does not support the <code>video</code> element.\n",
       "    </video>"
      ],
      "text/plain": [
       "<IPython.core.display.Video object>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import time\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from celluloid import Camera\n",
    "from IPython.display import Video\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "SDL = sorted(date_list)\n",
    "count = []\n",
    "days = 1\n",
    "fig = plt.figure()\n",
    "plt.rc('font', size = 5)\n",
    "plt.xlabel('Number of Patients')\n",
    "plt.ylabel('Countries Who got COVID19 Patients')\n",
    "camera = Camera(fig)    \n",
    "for key in SDL:                 ##key 예시)1/13/2020\n",
    "    c_count = {}\n",
    "\n",
    "\n",
    "    \n",
    "    for lst in date_list[key]:\n",
    "        lst = int(lst)          ##lst = id\n",
    "        count.append(a[\"country\"][lst-1])\n",
    "    for e in count:      \n",
    "        try: c_count[e]+= 1\n",
    "        except: c_count[e]=1\n",
    "    c_count = pd.Series(c_count)   ## for문에서 날짜(key of SDL)별로 { 나라 : 환자 수, 나라 : 환자 수 .. }같이 dictionary 형태로 저장 \n",
    "    cell = pd.DataFrame(c_count)\n",
    "    v = cell.values \n",
    "    v = np.squeeze(v, axis =1)\n",
    "    \n",
    "    \n",
    "    plt.barh(cell.index,v,color='blue')\n",
    "    camera.snap()\n",
    "    plt.title(\"2020.1.13~2020.2.27\")\n",
    "    days = days +1\n",
    "\n",
    "animation = camera.animate(interval=250, blit=True) ## interval 단위 ms\n",
    "\n",
    "animation.save(\n",
    "    'corona_20200113~20200227.mp4',\n",
    "    dpi=150,\n",
    "    savefig_kwargs={\n",
    "        'frameon': True,\n",
    "        'pad_inches': 'tight'\n",
    "    }\n",
    ")\n",
    "\n",
    "Video(\"corona_20200113~20200227.mp4\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "time : 7.443100452423096\n"
     ]
    }
   ],
   "source": [
    "print(\"time :\", time.time() - start)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
